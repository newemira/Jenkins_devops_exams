{{- range $service := (list "movieService" "castService") }}
{{- $serviceValues := index $.Values $service }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceValues.name }}
  labels:
    app: {{ $serviceValues.name }}
spec:
  replicas: {{ $serviceValues.replicaCount }}
  selector:
    matchLabels:
      app: {{ $serviceValues.name }}
  template:
    metadata:
      labels:
        app: {{ $serviceValues.name }}
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.28
          command: ['sh', '-c', 'until nslookup {{ if eq $serviceValues.name "movie-service" }}movie-db-service{{ else }}cast-db-service{{ end }}; do echo waiting for database; sleep 2; done;']
      containers:
        - name: {{ $serviceValues.name }}
          image: "{{ $serviceValues.image.repository }}:{{ $serviceValues.image.tag }}"
          imagePullPolicy: {{ $serviceValues.image.pullPolicy }}
          env:
            - name: DATABASE_URI
              value: postgresql://{{ $serviceValues.database.username }}:{{ $serviceValues.database.password }}@{{ if eq $serviceValues.name "movie-service" }}movie-db-service{{ else }}cast-db-service{{ end }}/{{ $serviceValues.database.name }}
          ports:
            - name: http
              containerPort: {{ $serviceValues.service.targetPort }}
              protocol: TCP
---
{{- end }}